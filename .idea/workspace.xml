<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c8ec3fb5-5c5c-4437-9699-5ea6145725fa" name="Changes" comment="- Added a positive test verifying JWT token structure for valid credentials.&#10;- Added negative tests for incorrect HTTP method and malformed body.&#10;- Improved test titles for clarity and consistency.">
      <change beforePath="$PROJECT_DIR$/.github/workflows/test.yml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/test.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Readme.md" beforeDir="false" afterPath="$PROJECT_DIR$/Readme.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dto/LoanRequestDTO.ts" beforeDir="false" afterPath="$PROJECT_DIR$/dto/LoanRequestDTO.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dto/login-dto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/dto/login-dto.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dto/order-dto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/dto/order-dto.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/playwright.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/playwright.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/login.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/login.spec.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="feature/env-vars-token" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;audingacij&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/prihhan/intro-to-api-testing-playwright_API.git&quot;,
    &quot;accountId&quot;: &quot;0b30b51b-fc9c-48e6-bc7c-1112367c6d08&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="DEPENDENCY_CHECKER_PROBLEMS_TAB" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="34L1X4mMpQU6AWbM0s33sVUMr3N" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Playwright.Negative: Update order with invalid api_key = 123 | 401 Unauthorized.executor": "Run",
    "Playwright.Positive: Update order with valid id = 1 + valid api_key | 200 OK.executor": "Run",
    "Playwright.Positive: Update order with valid id = 2 + valid api_key | 200 OK.executor": "Run",
    "Playwright.Positive: Update order with valid id = 3 + valid api_key | 200 OK.executor": "Run",
    "Playwright.get order with correct id should receive code 200.executor": "Run",
    "Playwright.get order with orderid 5 should receive code 200.executor": "Debug",
    "Playwright.loan-request-api.spec.ts.executor": "Run",
    "Playwright.login.spec.ts.executor": "Run",
    "Playwright.order-api.spec.ts.executor": "Run",
    "Playwright.post order with in correct data should receive code 400.executor": "Run",
    "Playwright.should fail when sending incorrect body structure.executor": "Run",
    "Playwright.should fail when using incorrect HTTP method.executor": "Run",
    "Playwright.should return APPROVED decision for valid applicant (positive case).executor": "Run",
    "Playwright.should return NEGATIVE decision for valid applicant.executor": "Run",
    "Playwright.should return Negative decision for valid user.executor": "Run",
    "Playwright.should return POSITIVE decision for valid applicant (positive case).executor": "Run",
    "Playwright.should return POSITIVE decision for valid applicant.executor": "Run",
    "Playwright.should return Positive decision (Low risk) for valid applicant.executor": "Run",
    "Playwright.should return Positive decision (Medium risk) for valid applicant.executor": "Run",
    "Playwright.should return Positive decision (Medium risk) for valid user.executor": "Run",
    "Playwright.should return a valid JWT token when provided with correct credentials.executor": "Run",
    "Playwright.should return token with correct username and password.executor": "Run",
    "Playwright.✅ should return APPROVED decision for valid applicant (positive case).executor": "Run",
    "Playwright.✅ should return POSITIVE decision for valid applicant (1).executor": "Run",
    "Playwright.✅ should return POSITIVE decision for valid applicant.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "feature/env-vars-token__enhanced",
    "junie.onboarding.icon.badge.shown": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "npm.format.executor": "Run",
    "npm.lint.executor": "Run",
    "npm.prettier:check.executor": "Run",
    "npm.prettier:format.executor": "Run",
    "prettierjs.PrettierConfiguration.Package": "C:\\Users\\Prihhan\\WebstormProjects\\intro-to-api-testing-playwright_API\\node_modules\\prettier",
    "settings.editor.selected.configurable": "preferences.lookFeel",
    "to.speed.mode.migration.done": "true",
    "ts.external.directory.path": "C:\\Users\\Prihhan\\WebstormProjects\\intro-to-api-testing-playwright_API\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Prihhan\WebstormProjects\intro-to-api-testing-playwright_API\tests" />
      <recent name="C:\Users\Prihhan\WebstormProjects\intro-to-api-testing-playwright_API" />
      <recent name="C:\Users\Prihhan\WebstormProjects\intro-to-api-testing-playwright_API\src\tests\api" />
      <recent name="C:\Users\Prihhan\WebstormProjects\intro-to-api-testing-playwright_API\src" />
    </key>
  </component>
  <component name="RunManager" selected="Playwright.should return an error when sending a malformed or invalid request body">
    <configuration name="All Tests" type="JavaScriptTestRunnerPlaywright" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <playwright-package value="$PROJECT_DIR$/node_modules/@playwright/test" />
      <working-dir value="$PROJECT_DIR$" />
      <envs>
        <env name="USER" value="userprihhan" />
        <env name="PASSWORD" value="whe7s5qbYbfT2n" />
      </envs>
      <scope-kind value="ALL" />
      <method v="2" />
    </configuration>
    <configuration name="should return a valid JWT token when provided with correct credentials" type="JavaScriptTestRunnerPlaywright" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <playwright-package value="$PROJECT_DIR$/node_modules/@playwright/test" />
      <working-dir value="$PROJECT_DIR$" />
      <envs>
        <env name="USER" value="userprihhan" />
        <env name="PASSWORD" value="whe7s5qbYbfT2n" />
      </envs>
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/tests/login.spec.ts" />
      <test-names>
        <test-name value="should return a valid JWT token when provided with correct credentials" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="should return an error when sending a malformed or invalid request body" type="JavaScriptTestRunnerPlaywright" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <playwright-package value="$PROJECT_DIR$/node_modules/@playwright/test" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/tests/login.spec.ts" />
      <test-names>
        <test-name value="should return an error when sending a malformed or invalid request body" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="should return an error when using an incorrect HTTP method" type="JavaScriptTestRunnerPlaywright" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <playwright-package value="$PROJECT_DIR$/node_modules/@playwright/test" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/tests/login.spec.ts" />
      <test-names>
        <test-name value="should return an error when using an incorrect HTTP method" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="format" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="format" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="prettier:check" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="prettier:check" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="npm.format" />
      <item itemvalue="npm.prettier:check" />
      <item itemvalue="Playwright.should return an error when sending a malformed or invalid request body" />
      <item itemvalue="Playwright.should return an error when using an incorrect HTTP method" />
      <item itemvalue="Playwright.should return a valid JWT token when provided with correct credentials" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Playwright.should return an error when sending a malformed or invalid request body" />
        <item itemvalue="Playwright.should return an error when using an incorrect HTTP method" />
        <item itemvalue="Playwright.should return a valid JWT token when provided with correct credentials" />
        <item itemvalue="npm.format" />
        <item itemvalue="npm.prettier:check" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-9c94529fcfe0-JavaScript-WS-252.26199.162" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c8ec3fb5-5c5c-4437-9699-5ea6145725fa" name="Changes" comment="" />
      <created>1760978075056</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1760978075056</updated>
      <workItem from="1760978076603" duration="1365000" />
      <workItem from="1761412246455" duration="1015000" />
      <workItem from="1761464783553" duration="6385000" />
      <workItem from="1761479901882" duration="9942000" />
      <workItem from="1761594713455" duration="125000" />
      <workItem from="1761596150015" duration="464000" />
      <workItem from="1761675000964" duration="7035000" />
    </task>
    <task id="LOCAL−00001" summary="adding new positive get request test">
      <option name="closed" value="true" />
      <created>1760979143692</created>
      <option name="number" value="LOCAL−00001" />
      <option name="presentableId" value="LOCAL−00001" />
      <updated>1760979143692</updated>
    </task>
    <task id="LOCAL−00002" summary="adding new positive get request test">
      <option name="closed" value="true" />
      <created>1760979245681</created>
      <option name="number" value="LOCAL−00002" />
      <option name="presentableId" value="LOCAL−00002" />
      <updated>1760979245681</updated>
    </task>
    <task id="LOCAL−00003" summary="adding new positive get request test">
      <option name="closed" value="true" />
      <created>1761152291966</created>
      <option name="number" value="LOCAL−00003" />
      <option name="presentableId" value="LOCAL−00003" />
      <updated>1761152291966</updated>
    </task>
    <task id="LOCAL−00004" summary="added a negative test case">
      <option name="closed" value="true" />
      <created>1761154711541</created>
      <option name="number" value="LOCAL−00004" />
      <option name="presentableId" value="LOCAL−00004" />
      <updated>1761154711541</updated>
    </task>
    <task id="LOCAL-00005" summary="formatting adjusted">
      <option name="closed" value="true" />
      <created>1761412922205</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1761412922205</updated>
    </task>
    <task id="LOCAL-00006" summary="added DTO object and changed folder structure">
      <option name="closed" value="true" />
      <created>1761480446084</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1761480446084</updated>
    </task>
    <task id="LOCAL-00007" summary="- created new homework branch&#10;- added test cases using DTO structure&#10;- updated readme file">
      <option name="closed" value="true" />
      <created>1761489385872</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1761489385872</updated>
    </task>
    <task id="LOCAL-00008" summary="dto with env var + pipeline">
      <option name="closed" value="true" />
      <created>1761589745182</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1761589745182</updated>
    </task>
    <task id="LOCAL-00009" summary="dto with env var + pipeline">
      <option name="closed" value="true" />
      <created>1761590106905</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1761590106905</updated>
    </task>
    <task id="LOCAL-00010" summary="dto with env var + pipeline">
      <option name="closed" value="true" />
      <created>1761590149453</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1761590149453</updated>
    </task>
    <task id="LOCAL-00011" summary="- Added a positive test verifying JWT token structure for valid credentials.&#10;- Added negative tests for incorrect HTTP method and malformed body.&#10;- Improved test titles for clarity and consistency.">
      <option name="closed" value="true" />
      <created>1761681873736</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1761681873736</updated>
    </task>
    <option name="localTasksCounter" value="12" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="adding new positive get request test" />
    <MESSAGE value="added a negative test case" />
    <MESSAGE value="formatting adjusted" />
    <MESSAGE value="added DTO object and changed folder structure" />
    <MESSAGE value="- created new homework branch&#10;- added test cases using DTO structure&#10;- updated readme file" />
    <MESSAGE value="dto with env var + pipeline" />
    <MESSAGE value="- Added a positive test verifying JWT token structure for valid credentials.&#10;- Added negative tests for incorrect HTTP method and malformed body.&#10;- Improved test titles for clarity and consistency." />
    <option name="LAST_COMMIT_MESSAGE" value="- Added a positive test verifying JWT token structure for valid credentials.&#10;- Added negative tests for incorrect HTTP method and malformed body.&#10;- Improved test titles for clarity and consistency." />
  </component>
</project>